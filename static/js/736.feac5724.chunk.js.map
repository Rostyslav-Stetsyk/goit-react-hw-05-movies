{"version":3,"file":"static/js/736.feac5724.chunk.js","mappings":"8PAGAA,EAAAA,EAAAA,SAAAA,QAAA,UADmB,gCAGZ,IAAMC,EAAmB,mCAAG,WAAOC,EAAMC,GAAb,uFACZH,EAAAA,EAAAA,IAAU,uBAAwB,CACnDI,OAAQ,CACJC,SAAU,QACRH,KAAAA,GAENI,QAAS,CACPC,cAAe,8NAEjBJ,OAAAA,IAT6B,cACzBK,EADyB,yBAWxBA,EAAKC,MAXmB,2CAAH,wDAcnBC,EAAe,mCAAG,WAAOC,EAAIR,EAAQS,GAAnB,uFACVZ,EAAAA,EAAAA,IAAA,iBAAoBW,GAApB,OAAyBC,GAAe,CACvDR,OAAQ,CACJC,SAAU,SAEdC,QAAS,CACPC,cAAe,8NAEjBJ,OAAAA,IARyB,cACvBK,EADuB,yBAUpBA,EAAKC,MAVe,2CAAH,0DAafI,EAAe,mCAAG,WAAOC,EAAOX,GAAd,uFACVH,EAAAA,EAAAA,IAAA,eAA0B,CACzCI,OAAQ,CACRC,SAAU,QACVH,KAAM,EACNY,MAAAA,GAEAR,QAAS,CACPC,cAAe,8NAEnBJ,OAAAA,IAV2B,cACvBK,EADuB,yBAYpBA,EAAKC,MAZe,2CAAH,uD,gJC9BfM,E,OAAWC,EAAAA,GAAH,2I,SCgDrB,EA7Ca,WACX,IAAMC,GAAgBC,EAAAA,EAAAA,UACdC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CACA,IAAMM,EAAU,mCAAG,sGAEfR,EAAcS,QAAU,IAAIC,gBACtBxB,EAASc,EAAcS,QAAQvB,OAHtB,UAKIO,EAAAA,EAAAA,IAAgBS,EAAShB,EAAQ,YALrC,OAKTK,EALS,OAMfe,EAAQf,EAAKc,MANE,yGAAH,qDAYhB,OAFAG,IAEO,kBAAMR,EAAcS,QAAQE,OAA5B,CAba,CAcrB,GAAE,CAACT,KAGF,SAACJ,EAAD,UACGO,EAAKO,KAAI,SAAAC,GAAE,OACV,2BACE,gBACEC,IACED,EAAGE,aAAH,yCACsCF,EAAGE,cADzC,kCAIFC,IAAKH,EAAGI,KACRC,MAAM,QACNC,OAAO,WAET,mCAAWN,EAAGI,SACd,uCAAeJ,EAAGO,eAZXP,EAAGnB,GADF,KAkBjB,C","sources":["api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst MAIN_DOMEN = 'https://api.themoviedb.org/3'\naxios.defaults.baseURL = `${MAIN_DOMEN}`;\n\nexport const getAllTrandingMovie = async (page, signal) => {\n    const resp = await axios.get('/trending/movie/week', {\n      params: {\n          language: 'en-US',\n            page,\n      },\n      headers: {\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NjgxOTRjMzU0NzdmMGYwYjkxNjU3N2I3ZTkwNzNhYiIsInN1YiI6IjY0YjAzY2NlZDQwZDRjMDBjNzA0MTU4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WuondqTspR6BFbUiN9ERo34V_vX6Uz8qDXlYw0f-B54'\n      },\n      signal,\n    })\n    return resp.data\n}\n\nexport const getDetailsMovie = async (id, signal, detailsType) => {\n  const resp = await axios.get(`/movie/${id}${detailsType}`, {\n      params: {\n          language: 'en-US',\n      },\n      headers: {\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NjgxOTRjMzU0NzdmMGYwYjkxNjU3N2I3ZTkwNzNhYiIsInN1YiI6IjY0YjAzY2NlZDQwZDRjMDBjNzA0MTU4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WuondqTspR6BFbUiN9ERo34V_vX6Uz8qDXlYw0f-B54'\n    },\n      signal\n    })\n    return resp.data\n}\n\nexport const getMovieByQuery = async (query, signal) => {\n  const resp = await axios.get(`search/movie`, {\n      params: {\n      language: 'en-US',\n      page: 1,\n      query,\n      },\n      headers: {\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NjgxOTRjMzU0NzdmMGYwYjkxNjU3N2I3ZTkwNzNhYiIsInN1YiI6IjY0YjAzY2NlZDQwZDRjMDBjNzA0MTU4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WuondqTspR6BFbUiN9ERo34V_vX6Uz8qDXlYw0f-B54'\n    },\n    signal\n    })\n    return resp.data\n}","import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  width: 100%;\n  margin-top: 30px;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  display: flex;\n  gap: 30px;\n`;\n","import { getDetailsMovie } from 'api';\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const controllerRef = useRef();\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getDetails = async () => {\n      try {\n        controllerRef.current = new AbortController();\n        const signal = controllerRef.current.signal;\n\n        const resp = await getDetailsMovie(movieId, signal, '/credits');\n        setCast(resp.cast);\n      } catch {}\n    };\n\n    getDetails();\n\n    return () => controllerRef.current.abort();\n  }, [movieId]);\n\n  return (\n    <CastList>\n      {cast.map(el => (\n        <li key={el.id}>\n          <img\n            src={\n              el.profile_path\n                ? `https://image.tmdb.org/t/p/w200${el.profile_path}`\n                : `https://i.imgur.com/GhqsTtz.jpg`\n            }\n            alt={el.name}\n            width=\"200px\"\n            height=\"300px\"\n          />\n          <h3>Name: {el.name}</h3>\n          <p>Chatacter: {el.character}</p>\n        </li>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n"],"names":["axios","getAllTrandingMovie","page","signal","params","language","headers","Authorization","resp","data","getDetailsMovie","id","detailsType","getMovieByQuery","query","CastList","styled","controllerRef","useRef","movieId","useParams","useState","cast","setCast","useEffect","getDetails","current","AbortController","abort","map","el","src","profile_path","alt","name","width","height","character"],"sourceRoot":""}