{"version":3,"file":"static/js/387.35ac0abd.chunk.js","mappings":"8PAGAA,EAAAA,EAAAA,SAAAA,QAAA,UADmB,gCAGZ,IAAMC,EAAmB,mCAAG,WAAOC,EAAMC,GAAb,uFACZH,EAAAA,EAAAA,IAAU,uBAAwB,CACnDI,OAAQ,CACJC,SAAU,QACRH,KAAAA,GAENI,QAAS,CACPC,cAAe,8NAEjBJ,OAAAA,IAT6B,cACzBK,EADyB,yBAWxBA,EAAKC,MAXmB,2CAAH,wDAcnBC,EAAe,mCAAG,WAAOC,EAAIR,EAAQS,GAAnB,uFACVZ,EAAAA,EAAAA,IAAA,iBAAoBW,GAApB,OAAyBC,GAAe,CACvDR,OAAQ,CACJC,SAAU,SAEdC,QAAS,CACPC,cAAe,8NAEjBJ,OAAAA,IARyB,cACvBK,EADuB,yBAUpBA,EAAKC,MAVe,2CAAH,0DAafI,EAAe,mCAAG,WAAOC,EAAOX,GAAd,uFACVH,EAAAA,EAAAA,IAAA,eAA0B,CACzCI,OAAQ,CACRC,SAAU,QACVH,KAAM,EACNY,MAAAA,GAEAR,QAAS,CACPC,cAAe,8NAEnBJ,OAAAA,IAV2B,cACvBK,EADuB,yBAYpBA,EAAKC,MAZe,2CAAH,uD,6JC9BfM,EAAcC,EAAAA,EAAAA,GAAH,qJASXC,EAAWD,EAAAA,EAAAA,GAAH,sKASRE,EAAcF,EAAAA,EAAAA,GAAH,6C,SCwBxB,EAvCgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAgBC,EAAAA,EAAAA,UAEtB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CACA,IAAMQ,EAAU,mCAAG,sGAEfN,EAAcO,QAAU,IAAIC,gBACtB1B,EAASkB,EAAcO,QAAQzB,OAHtB,UAKIO,EAAAA,EAAAA,IAAgBS,EAAShB,EAAQ,YALrC,OAKTK,EALS,OAMfiB,EAAWjB,EAAKsB,SAND,yGAAH,qDAYhB,OAFAH,IAEO,kBAAMN,EAAcO,QAAQG,OAA5B,CAba,CAcrB,GAAE,CAACZ,KAGF,SAACJ,EAAD,UACGS,EAAQQ,KAAI,SAAAC,GACX,IAAMC,EAAY,IAAIC,KAAKF,EAAGG,YAC9B,OACE,UAACnB,EAAD,YACE,UAACC,EAAD,sBAAsBe,EAAGI,WACzB,uBAAIJ,EAAGK,WACP,wCAAgBJ,EAAUK,mBAAmB,cAHhCN,EAAGtB,GAMrB,KAGN,C","sources":["api.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst MAIN_DOMEN = 'https://api.themoviedb.org/3'\naxios.defaults.baseURL = `${MAIN_DOMEN}`;\n\nexport const getAllTrandingMovie = async (page, signal) => {\n    const resp = await axios.get('/trending/movie/week', {\n      params: {\n          language: 'en-US',\n            page,\n      },\n      headers: {\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NjgxOTRjMzU0NzdmMGYwYjkxNjU3N2I3ZTkwNzNhYiIsInN1YiI6IjY0YjAzY2NlZDQwZDRjMDBjNzA0MTU4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WuondqTspR6BFbUiN9ERo34V_vX6Uz8qDXlYw0f-B54'\n      },\n      signal,\n    })\n    return resp.data\n}\n\nexport const getDetailsMovie = async (id, signal, detailsType) => {\n  const resp = await axios.get(`/movie/${id}${detailsType}`, {\n      params: {\n          language: 'en-US',\n      },\n      headers: {\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NjgxOTRjMzU0NzdmMGYwYjkxNjU3N2I3ZTkwNzNhYiIsInN1YiI6IjY0YjAzY2NlZDQwZDRjMDBjNzA0MTU4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WuondqTspR6BFbUiN9ERo34V_vX6Uz8qDXlYw0f-B54'\n    },\n      signal\n    })\n    return resp.data\n}\n\nexport const getMovieByQuery = async (query, signal) => {\n  const resp = await axios.get(`search/movie`, {\n      params: {\n      language: 'en-US',\n      page: 1,\n      query,\n      },\n      headers: {\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI2NjgxOTRjMzU0NzdmMGYwYjkxNjU3N2I3ZTkwNzNhYiIsInN1YiI6IjY0YjAzY2NlZDQwZDRjMDBjNzA0MTU4ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.WuondqTspR6BFbUiN9ERo34V_vX6Uz8qDXlYw0f-B54'\n    },\n    signal\n    })\n    return resp.data\n}","import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-top: 30px;\n  max-height: 640px;\n  overflow-y: scroll;\n`;\n\nexport const ReviewEl = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding: 5px;\n  border: 1px solid transparent;\n  background-color: ghostwhite;\n`;\n\nexport const ReviewTitle = styled.h3`\n  font-weight: 600;\n`;\n","import { getDetailsMovie } from 'api';\nimport { useEffect, useRef, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewEl, ReviewTitle, ReviewsList } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const controllerRef = useRef();\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getDetails = async () => {\n      try {\n        controllerRef.current = new AbortController();\n        const signal = controllerRef.current.signal;\n\n        const resp = await getDetailsMovie(movieId, signal, '/reviews');\n        setReviews(resp.results);\n      } catch {}\n    };\n\n    getDetails();\n\n    return () => controllerRef.current.abort();\n  }, [movieId]);\n\n  return (\n    <ReviewsList>\n      {reviews.map(el => {\n        const timestamp = new Date(el.created_at);\n        return (\n          <ReviewEl key={el.id}>\n            <ReviewTitle>Author: {el.author}</ReviewTitle>\n            <p>{el.content}</p>\n            <p>Time stamp: {timestamp.toLocaleDateString('en-US')}</p>\n          </ReviewEl>\n        );\n      })}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","getAllTrandingMovie","page","signal","params","language","headers","Authorization","resp","data","getDetailsMovie","id","detailsType","getMovieByQuery","query","ReviewsList","styled","ReviewEl","ReviewTitle","movieId","useParams","controllerRef","useRef","useState","reviews","setReviews","useEffect","getDetails","current","AbortController","results","abort","map","el","timestamp","Date","created_at","author","content","toLocaleDateString"],"sourceRoot":""}